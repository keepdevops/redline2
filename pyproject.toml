[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "redline-financial"
version = "1.0.0"
description = "Professional financial data analysis platform with GUI and web interface"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "REDLINE Development Team", email = "support@redline.example.com"}
]
maintainers = [
    {name = "REDLINE Development Team", email = "support@redline.example.com"}
]
keywords = [
    "finance",
    "stock", 
    "trading",
    "analysis",
    "data",
    "yfinance",
    "financial-data",
    "stock-market",
    "investment",
    "portfolio"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Financial and Insurance Industry",
    "Intended Audience :: Developers",
    "Topic :: Office/Business :: Financial",
    "Topic :: Office/Business :: Financial :: Investment",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Operating System :: OS Independent",
    "Environment :: Console",
    "Environment :: Web Environment",
    "Framework :: Flask",
]
requires-python = ">=3.11"
dependencies = [
    "pandas>=2.0.0",
    "numpy>=1.24.0",
    "yfinance>=0.2.0",
    "duckdb>=0.8.0",
    "pyarrow>=10.0.0",
    "polars>=0.19.0",
    "flask>=2.3.0",
    "flask-socketio>=5.3.0",
    "flask-compress>=1.13.0",
    "matplotlib>=3.7.0",
    "seaborn>=0.12.0",
    "scikit-learn>=1.3.0",
    "openpyxl>=3.1.0",
    "xlsxwriter>=3.1.0",
    "requests>=2.31.0",
    "urllib3>=2.0.0",
    "configparser>=5.3.0",
    "click>=8.1.0",
    "jinja2>=3.1.0",
    "markupsafe>=2.1.0",
    "blinker>=1.6.0",
    "itsdangerous>=2.1.0",
    "werkzeug>=2.3.0",
    "gunicorn>=21.0.0",
    "eventlet>=0.33.0",
    "gevent>=23.0.0",
    "python-socketio>=5.8.0",
    "python-engineio>=4.7.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.5.0",
    "pre-commit>=3.3.0",
]
test = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.0",
    "pytest-xdist>=3.3.0",
]
docs = [
    "sphinx>=7.1.0",
    "sphinx-rtd-theme>=1.3.0",
    "myst-parser>=2.0.0",
]
docker = [
    "docker>=6.1.0",
    "docker-compose>=1.29.0",
]

[project.urls]
Homepage = "https://github.com/keepdevops/redline2"
Documentation = "https://github.com/keepdevops/redline2/blob/main/README.md"
Repository = "https://github.com/keepdevops/redline2.git"
Issues = "https://github.com/keepdevops/redline2/issues"
Changelog = "https://github.com/keepdevops/redline2/blob/main/CHANGELOG.md"

[project.scripts]
redline-gui = "main:main"
redline-web = "web_app:main"
redline = "redline.cli.download:main"

[tool.setuptools]
packages = ["redline", "licensing", "redline.core", "redline.gui", "redline.database", "redline.downloaders", "redline.utils", "redline.analysis", "redline.web", "redline.cli", "redline.updates", "licensing.server", "licensing.client"]
py-modules = ["main", "web_app"]

[tool.setuptools.package-data]
redline = [
    "web/static/**/*",
    "web/templates/**/*",
    "data_config.ini",
    "__version__.py",
]
licensing = [
    "server/*.py",
    "client/*.py",
]

[tool.setuptools.exclude-package-data]
"*" = [
    "tests/*",
    "test_*",
    "*_test.py",
    "build/*",
    "dist/*",
    ".git/*",
    ".github/*",
    "__pycache__/*",
    "*.pyc",
    "*.pyo",
    "*.pyd",
    ".pytest_cache/*",
    ".coverage",
    "*.egg-info/*",
]

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".eggs",
    "*.egg-info",
    ".venv",
    ".mypy_cache",
    ".pytest_cache",
]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["redline"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/build/*",
    "*/dist/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
