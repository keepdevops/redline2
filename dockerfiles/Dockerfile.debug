# REDLINE Web GUI - Debug Dockerfile (BuildKit-Free)
# Ubuntu 24.04 LTS with Python 3.12 and essential packages only
# Runs as root to avoid permission issues
# Includes debug output for troubleshooting

FROM ubuntu:24.04

# Set environment variables
ENV DEBIAN_FRONTEND=noninteractive
ENV PYTHONUNBUFFERED=1
ENV PYTHONDONTWRITEBYTECODE=1
ENV PIP_NO_CACHE_DIR=1
ENV PIP_DISABLE_PIP_VERSION_CHECK=1

# Set working directory
WORKDIR /opt/redline

# Install system dependencies (minimal set)
RUN apt-get update && apt-get install -y \
    python3 \
    python3-dev \
    python3-pip \
    python3-setuptools \
    python3-wheel \
    build-essential \
    curl \
    wget \
    git \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Show Python and pip versions
RUN python3 --version && pip3 --version

# Copy requirements and install Python packages with debug output
COPY requirements-simple.txt /opt/redline/
RUN echo "=== Installing Python packages ===" && \
    pip3 install --upgrade pip setuptools wheel && \
    echo "=== Upgraded pip ===" && \
    pip3 --version && \
    echo "=== Installing requirements ===" && \
    pip3 install -r requirements-simple.txt --no-cache-dir --verbose

# Copy application code
COPY . /opt/redline/

# Create necessary directories
RUN mkdir -p /opt/redline/data \
    /opt/redline/logs \
    /opt/redline/uploads \
    /opt/redline/temp \
    /var/log/redline

# Expose port
EXPOSE 8080

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:8080/health || exit 1

# Default command - run Flask directly as root
CMD ["python3", "web_app.py"]
