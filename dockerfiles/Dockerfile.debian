# REDLINE Web GUI Dockerfile - Debian
# Stable, server-focused distribution
FROM debian:12-slim

# Set environment variables
ENV DEBIAN_FRONTEND=noninteractive
ENV PYTHONUNBUFFERED=1
ENV PYTHONDONTWRITEBYTECODE=1
ENV PIP_NO_CACHE_DIR=1
ENV PIP_DISABLE_PIP_VERSION_CHECK=1
ENV PYTHON_VERSION=3.11+
ENV DISTRO=debian

# Set working directory
WORKDIR /opt/redline

# Install system dependencies and Debian packages
RUN apt-get update && apt-get install -y \
    # Python and pip
    python3 \
    python3-dev \
    python3-pip \
    python3-setuptools \
    python3-wheel \
    python3-venv \
    # Build tools
    build-essential \
    gcc \
    g++ \
    make \
    # System utilities
    bash \
    curl \
    wget \
    git \
    ca-certificates \
    tzdata \
    # Security tools
    openssl \
    # Network tools
    net-tools \
    iputils-ping \
    # Process management
    supervisor \
    # Logging
    logrotate \
    # File system
    util-linux \
    coreutils \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Create non-root user for security
RUN groupadd -r redline && useradd -r -g redline redline

# Set up Python virtual environment
RUN python3 -m venv /opt/redline/venv
ENV PATH="/opt/redline/venv/bin:$PATH"

# Upgrade pip and install essential tools
RUN pip install --upgrade pip setuptools wheel importlib-metadata

# Copy requirements first for better caching
COPY requirements.txt /opt/redline/

# Install Python dependencies
RUN pip install --no-cache-dir -r requirements.txt

# Copy application code
COPY . /opt/redline/

# Set proper permissions
RUN chown -R redline:redline /opt/redline

# Switch to non-root user
USER redline

# Expose port
EXPOSE 8080

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:8080/health || exit 1

# Default command
CMD ["python3", "web_app.py"]
