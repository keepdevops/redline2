# REDLINE Web GUI - Simplified Dockerfile (BuildKit-Free) - Non-Root Version
# Ubuntu 24.04 LTS with Python 3.12 and essential packages only
# Properly handles user switching to avoid permission issues

FROM ubuntu:24.04

# Set environment variables
ENV DEBIAN_FRONTEND=noninteractive
ENV PYTHONUNBUFFERED=1
ENV PYTHONDONTWRITEBYTECODE=1
ENV PIP_NO_CACHE_DIR=1
ENV PIP_DISABLE_PIP_VERSION_CHECK=1

# Set working directory
WORKDIR /opt/redline

# Install system dependencies (minimal set)
RUN apt-get update && apt-get install -y \
    python3 \
    python3-dev \
    python3-pip \
    python3-setuptools \
    python3-wheel \
    build-essential \
    curl \
    wget \
    git \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Create redline user with proper UID/GID
RUN groupadd -r redline && useradd -r -g redline -d /opt/redline -s /bin/bash redline

# Copy requirements and install Python packages
COPY dockerfiles/requirements-simple.txt /opt/redline/
RUN pip3 install -r requirements-simple.txt

# Copy application code
COPY . /opt/redline/

# Create necessary directories and set permissions
RUN mkdir -p /opt/redline/data \
    /opt/redline/logs \
    /opt/redline/uploads \
    /opt/redline/temp \
    /var/log/redline \
    && chown -R redline:redline /opt/redline \
    && chown -R redline:redline /var/log/redline \
    && chmod -R 755 /opt/redline

# Switch to non-root user
USER redline

# Expose port
EXPOSE 8080

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:8080/health || exit 1

# Default command - run Flask directly
CMD ["python3", "web_app.py"]
