# Optimized Dockerfile for REDLINE Web Interface Only
# Supports: x86_64, ARM64, Apple Silicon
# Minimal image for web-only deployment

FROM --platform=$BUILDPLATFORM python:3.11-slim

ENV PYTHONUNBUFFERED=1
ENV PYTHONDONTWRITEBYTECODE=1
ENV WEB_PORT=8080

# Build arguments
ARG TARGETPLATFORM
ARG BUILDPLATFORM

# Labels for metadata
LABEL maintainer="REDLINE Team"
LABEL description="REDLINE Web Interface Only"
LABEL version="1.0.0"
LABEL org.opencontainers.image.source="https://github.com/redline/redline"

# Install system dependencies
RUN apt-get update && \
    apt-get install -y \
    # Core packages
    curl \
    wget \
    git \
    build-essential \
    # Web server
    nginx \
    # Utilities
    procps \
    jq \
    && apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# Create non-root user
RUN useradd -m -s /bin/bash redline

# Set working directory
WORKDIR /app

# Copy requirements first for better Docker layer caching
COPY requirements_docker.txt ./

# Install Python packages
RUN python -m pip install --upgrade pip && \
    python -m pip install --no-cache-dir -r requirements_docker.txt

# Copy application files
COPY main.py data_config.ini ./
COPY redline/ ./redline/
COPY web_app.py ./

# Create data directories with proper permissions
RUN mkdir -p data data/converted data/downloaded data/stooq_format && \
    chown -R redline:redline /app

# Copy web-specific entrypoint
COPY entrypoint_web.sh ./
RUN chmod +x entrypoint_web.sh

# Switch to non-root user
USER redline

# Expose port
EXPOSE ${WEB_PORT}

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:${WEB_PORT}/status || exit 1

# Set entrypoint
ENTRYPOINT ["./entrypoint_web.sh"]

# Default command
CMD ["--web"]