# REDLINE Web-Based GUI Dockerfile
# Uses noVNC + TigerVNC for web-based GUI access without X11 forwarding

FROM ubuntu:22.04

# Set environment variables
ENV DEBIAN_FRONTEND=noninteractive
ENV DISPLAY=:1
ENV VNC_PORT=5901
ENV NO_VNC_PORT=6080
ENV VNC_RESOLUTION=1920x1080
ENV VNC_COL_DEPTH=24

# Install system dependencies
RUN apt-get update && apt-get install -y \
    # Basic utilities
    wget \
    curl \
    unzip \
    supervisor \
    # Desktop environment
    xfce4 \
    xfce4-goodies \
    # VNC server
    tigervnc-standalone-server \
    tigervnc-common \
    # Python and GUI dependencies
    python3 \
    python3-pip \
    python3-tk \
    python3-dev \
    # Additional GUI libraries
    libgl1-mesa-glx \
    libglib2.0-0 \
    libxext6 \
    libxrender1 \
    libxtst6 \
    libxi6 \
    # Web browser (optional)
    firefox \
    # Cleanup
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Install noVNC
RUN mkdir -p /opt/noVNC \
    && cd /opt/noVNC \
    && wget -qO- https://github.com/novnc/noVNC/archive/v1.3.0.tar.gz | tar xz --strip 1 \
    && cd utils/novnc \
    && wget -qO- https://github.com/novnc/websockify/archive/v0.10.0.tar.gz | tar xz --strip 1

# Create VNC password
RUN mkdir -p ~/.vnc \
    && echo "redline123" | vncpasswd -f > ~/.vnc/passwd \
    && chmod 600 ~/.vnc/passwd

# Create VNC startup script
RUN echo '#!/bin/bash\n\
# Start VNC server\n\
vncserver :1 -geometry $VNC_RESOLUTION -depth $VNC_COL_DEPTH\n\
\n\
# Start noVNC\n\
cd /opt/noVNC/utils/novnc\n\
./websockify --web /opt/noVNC $NO_VNC_PORT localhost:$VNC_PORT\n\
\n\
# Keep container running\n\
tail -f /dev/null' > /start-vnc.sh \
    && chmod +x /start-vnc.sh

# Create desktop environment startup script
RUN echo '#!/bin/bash\n\
# Start desktop environment\n\
startxfce4 &' > /start-desktop.sh \
    && chmod +x /start-desktop.sh

# Create supervisor configuration
RUN echo '[supervisord]\n\
nodaemon=true\n\
user=root\n\
\n\
[program:vnc]\n\
command=/start-vnc.sh\n\
autorestart=true\n\
\n\
[program:desktop]\n\
command=/start-desktop.sh\n\
autorestart=true\n\
environment=DISPLAY=":1"' > /etc/supervisor/conf.d/supervisord.conf

# Copy REDLINE application
COPY . /app
WORKDIR /app

# Install Python dependencies
RUN pip3 install -r requirements.txt

# Create startup script for REDLINE GUI
RUN echo '#!/bin/bash\n\
# Start REDLINE GUI\n\
cd /app\n\
python3 main.py &' > /start-redline.sh \
    && chmod +x /start-redline.sh

# Expose ports
EXPOSE 6080 5901

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:6080/ || exit 1

# Start services
CMD ["/usr/bin/supervisord", "-c", "/etc/supervisor/conf.d/supervisord.conf"]
