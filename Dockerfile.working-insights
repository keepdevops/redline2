# Working Dockerfile based on Option 1 insights
FROM ubuntu:22.04

# Set environment variables
ENV DEBIAN_FRONTEND=noninteractive

# Install system dependencies (same as working webgui)
RUN apt-get update && apt-get install -y \
    wget \
    curl \
    unzip \
    python3 \
    python3-pip \
    python3-dev \
    python3-tk \
    build-essential \
    libgl1-mesa-glx \
    libglib2.0-0 \
    libxext6 \
    libxrender1 \
    libxtst6 \
    libxi6 \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Create app directory
WORKDIR /opt/redline

# Install packages individually with fallback (like working webgui)
RUN pip3 install pandas || true
RUN pip3 install numpy || true
RUN pip3 install flask || true
RUN pip3 install flask-socketio || true
RUN pip3 install flask-compress || true
RUN pip3 install werkzeug || true
RUN pip3 install requests || true
RUN pip3 install duckdb || true
RUN pip3 install pyarrow || true
RUN pip3 install yfinance || true
RUN pip3 install celery || true
RUN pip3 install redis || true
RUN pip3 install gunicorn || true

# Copy application code
COPY . .

# Create necessary directories
RUN mkdir -p data logs config

# Expose port
EXPOSE 8080

# Simple command - just run Flask directly
CMD ["python3", "web_app.py"]
