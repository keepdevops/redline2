# REDLINE Web-Based GUI - Simple Flask Approach
# No VNC needed - just run the web app directly

FROM ubuntu:22.04

# Set environment variables
ENV DEBIAN_FRONTEND=noninteractive
ENV FLASK_APP=web_app.py
ENV FLASK_ENV=production

# Install Python and basic dependencies
RUN apt-get update && apt-get install -y \
    python3 \
    python3-pip \
    curl \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Upgrade pip first
RUN pip3 install --upgrade pip setuptools wheel

# Copy requirements first for better caching
COPY requirements.txt /app/
WORKDIR /app

# Install all Python dependencies in one layer (better for caching)
RUN pip3 install --no-cache-dir \
    flask werkzeug jinja2 markupsafe click blinker itsdangerous \
    flask-socketio flask-compress flask-limiter \
    python-socketio eventlet gevent gevent-websocket \
    numpy pandas duckdb pyarrow fastparquet yfinance polars \
    celery redis \
    requests urllib3 \
    scikit-learn matplotlib seaborn \
    openpyxl xlsxwriter \
    configparser gunicorn

# Now copy the application code (changes less frequently than dependencies)
COPY . /app

# Expose web port
EXPOSE 8080

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8080/health || exit 1

# Start the web application
CMD ["python3", "web_app.py"]
