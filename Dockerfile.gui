# Multi-Platform Dockerfile for REDLINE Tkinter GUI
# Supports: AMD64 (x86_64) and ARM64 (aarch64)
# Optimized for GUI applications with X11 forwarding

FROM --platform=$BUILDPLATFORM python:3.11-slim

# Build arguments for multi-platform support
ARG TARGETPLATFORM
ARG BUILDPLATFORM

# Labels for metadata
LABEL maintainer="REDLINE Team"
LABEL description="REDLINE Tkinter GUI Application"
LABEL version="1.0.0"
LABEL org.opencontainers.image.source="https://github.com/redline/redline"

# Environment variables
ENV PYTHONUNBUFFERED=1
ENV PYTHONDONTWRITEBYTECODE=1
ENV DISPLAY=:0
ENV DEBIAN_FRONTEND=noninteractive

# Install system dependencies for GUI and multi-platform support
RUN apt-get update && apt-get install -y \
    # Core packages
    curl \
    wget \
    git \
    build-essential \
    # GUI dependencies
    python3-tk \
    python3-dev \
    # X11 and display support
    x11-apps \
    xauth \
    xvfb \
    # Font support
    fonts-dejavu-core \
    fonts-liberation \
    # Platform-specific dependencies
    libc6-dev \
    libffi-dev \
    libssl-dev \
    # Utilities
    procps \
    jq \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Create non-root user for GUI
RUN useradd -m -s /bin/bash -u 1000 redline && \
    usermod -aG audio,video redline

# Set working directory
WORKDIR /app

# Copy requirements first for better Docker layer caching
COPY requirements.txt ./

# Install Python packages
RUN python -m pip install --upgrade pip && \
    python -m pip install --no-cache-dir -r requirements.txt

# Copy application files
COPY main.py data_config.ini ./
COPY redline/ ./redline/

# Create data directories with proper permissions
RUN mkdir -p data data/converted data/downloaded data/stooq_format logs && \
    chown -R redline:redline /app

# Create GUI startup script
RUN echo '#!/bin/bash' > /app/start_gui.sh && \
    echo 'set -e' >> /app/start_gui.sh && \
    echo 'echo "Starting REDLINE Tkinter GUI..."' >> /app/start_gui.sh && \
    echo 'echo "Display: $DISPLAY"' >> /app/start_gui.sh && \
    echo 'echo "Platform: $(uname -m)"' >> /app/start_gui.sh && \
    echo 'echo "Python version: $(python --version)"' >> /app/start_gui.sh && \
    echo 'echo "Tkinter version: $(python -c "import tkinter; print(tkinter.TkVersion)")"' >> /app/start_gui.sh && \
    echo 'cd /app' >> /app/start_gui.sh && \
    echo 'python main.py' >> /app/start_gui.sh && \
    chmod +x /app/start_gui.sh

# Create GUI test script
RUN echo '#!/bin/bash' > /app/test_gui.sh && \
    echo 'set -e' >> /app/test_gui.sh && \
    echo 'echo "Testing REDLINE GUI components..."' >> /app/test_gui.sh && \
    echo 'cd /app' >> /app/test_gui.sh && \
    echo 'python -c "import tkinter; print(\"✓ Tkinter available\")"' >> /app/test_gui.sh && \
    echo 'python -c "import pandas; print(\"✓ Pandas available\")"' >> /app/test_gui.sh && \
    echo 'python -c "import numpy; print(\"✓ NumPy available\")"' >> /app/test_gui.sh && \
    echo 'python -c "import matplotlib; print(\"✓ Matplotlib available\")"' >> /app/test_gui.sh && \
    echo 'python -c "import duckdb; print(\"✓ DuckDB available\")"' >> /app/test_gui.sh && \
    echo 'python -c "from redline.gui.main_window import StockAnalyzerGUI; print(\"✓ GUI module available\")"' >> /app/test_gui.sh && \
    echo 'echo "✓ All GUI components tested successfully!"' >> /app/test_gui.sh && \
    chmod +x /app/test_gui.sh

# Create X11 forwarding helper script
RUN echo '#!/bin/bash' > /app/setup_x11.sh && \
    echo 'set -e' >> /app/setup_x11.sh && \
    echo 'echo "Setting up X11 forwarding..."' >> /app/setup_x11.sh && \
    echo 'if [ -n "$DISPLAY" ]; then' >> /app/setup_x11.sh && \
    echo '    echo "Display already set: $DISPLAY"' >> /app/setup_x11.sh && \
    echo 'else' >> /app/setup_x11.sh && \
    echo '    export DISPLAY=:0' >> /app/setup_x11.sh && \
    echo '    echo "Set display to: $DISPLAY"' >> /app/setup_x11.sh && \
    echo 'fi' >> /app/setup_x11.sh && \
    echo 'if [ -n "$XAUTHORITY" ]; then' >> /app/setup_x11.sh && \
    echo '    echo "X11 authority already set"' >> /app/setup_x11.sh && \
    echo 'else' >> /app/setup_x11.sh && \
    echo '    export XAUTHORITY=/tmp/.X11-unix/X0' >> /app/setup_x11.sh && \
    echo '    echo "Set X11 authority"' >> /app/setup_x11.sh && \
    echo 'fi' >> /app/setup_x11.sh && \
    chmod +x /app/setup_x11.sh

# Switch to non-root user
USER redline

# Health check for GUI components
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD python -c "import tkinter; import pandas; import numpy; print('GUI components healthy')" || exit 1

# Default command
CMD ["/app/start_gui.sh"]
